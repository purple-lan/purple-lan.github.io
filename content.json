{"meta":{"title":"Frank's Blog","subtitle":"NO GAME NO LIFE","description":"good!","author":"m","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2021-11-18T07:57:07.000Z","updated":"2021-11-18T07:57:31.218Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-11-22T07:34:39.000Z","updated":"2021-11-22T08:21:26.311Z","comments":true,"path":"tags/index-1.html","permalink":"http://yoursite.com/tags/index-1.html","excerpt":"","text":""},{"title":"categories","date":"2021-11-22T07:34:16.000Z","updated":"2021-11-22T08:21:27.838Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-11-18T07:50:52.000Z","updated":"2021-11-18T07:56:07.068Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"Downloads","date":"2021-11-22T06:42:59.000Z","updated":"2021-11-22T06:42:59.960Z","comments":true,"path":"Downloads/index.html","permalink":"http://yoursite.com/Downloads/index.html","excerpt":"","text":""}],"posts":[{"title":"Python库之os","slug":"Python库之os","date":"2021-11-25T05:40:13.000Z","updated":"2021-11-25T08:53:43.542Z","comments":true,"path":"2021/11/25/Python库之os/","link":"","permalink":"http://yoursite.com/2021/11/25/Python%E5%BA%93%E4%B9%8Bos/","excerpt":"","text":"这篇文章主要是记录在做第一次项目中所用到的os库代码的记录，不仅为了记录学习足迹，也为了以后用方便copy。 os库函数基本应用 合并两个地址 12345root_path = r'/Users/frank/Desktop'name = 'image.jpg'path = os.path.join(root_path, name)print(path)输出：/Users/frank/Desktop/image.jpg 分离地址下最后一个文件名 1234root_path = r'/Users/frank/Desktop/image.jpg'name = os.path.basename(root_path)print(name)输出：image.jpg 查找文件是否存在 1234root_path = r'/Users/frank/Desktop/image.jpg'if os.path.isfile(root_path): print('yes')输出：yes 分离文件的文件名和后缀 1234name = '/Users/frank/Desktop/image.jpg'a = os.path.splitext(name)print(a)输出：'/Users/frank/Desktop/image','.jpg' 查找当前目录下的所有文件和文件夹（仅当前目录） 12345678root = r'/Users/frank/Desktop/files'path_list = os.listdir(root)# 对文件夹的内容进行排序path_list.sort()for name in path_list: files_name = os.path.join(root, name) print(name)输出：image1.jpg,image2.jpg,image3.jpg...... 查找目录下所有的文件或文件夹（包括文件夹里还存放的文件） 123456789root = r'/Users/frank/Desktop/files'for root, dirs, files in os.walk(root): for name in files: files_name = os.path.join(root, name) print(files_name)输出：/Users/frank/Desktop/files/img.jpg /Users/frank/Desktop/files/image/1.jpg /Users/frank/Desktop/files/image/2.jpg /Users/frank/Desktop/files/image/lab/11.csv 这个代码是读取根目录下的所有目录文件和文件夹，不仅仅是当前目录下的文件。 通过关键词查找文件 123456789101112131415161718def findfile(keyword, root_path):# keyword为关键字，root为文件夹路径 filelist = [] # 存放每个文件 rfilelist = [] # 存放匹配文件 for root, dirs, files in os.walk(root): for name in files: filelist.append(os.path.join(root, name)) # 遍历路径文件下的所有文件夹，将所有文件放入filelist # i为文件的绝对地址 for i in filelist: if os.path.isfile(i): if keyword in os.path.basename(os.path.splitext(i)[0]): rfilelist.append(i) else: pass else: pass return rfilelist","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2021-11-22T06:32:49.000Z","updated":"2021-11-22T06:34:39.047Z","comments":true,"path":"2021/11/22/我的第一篇博客/","link":"","permalink":"http://yoursite.com/2021/11/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"简介 这是我的第一篇‘Hexo’","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-11-18T05:43:16.463Z","updated":"2021-11-23T06:22:05.476Z","comments":true,"path":"2021/11/18/hello-world/","link":"","permalink":"http://yoursite.com/2021/11/18/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1hexo new \"My New Post\" More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://yoursite.com/tags/Python/"}]}