<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Frank&#39;s Blog</title>
  
  <subtitle>NO GAME NO LIFE</subtitle>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-11-26T07:39:48.241Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>m</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python之pydicom库</title>
    <link href="http://yoursite.com/2021/11/26/Python%E4%B9%8Bpydicom%E5%BA%93/"/>
    <id>http://yoursite.com/2021/11/26/Python%E4%B9%8Bpydicom%E5%BA%93/</id>
    <published>2021-11-26T07:12:46.000Z</published>
    <updated>2021-11-26T07:39:48.241Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Python之txt、excel操作</title>
    <link href="http://yoursite.com/2021/11/25/Python%E4%B9%8Btxt%E6%96%87%E6%9C%AC%E8%AF%BB%E5%86%99%E4%B8%8E%E6%90%9C%E7%B4%A2/"/>
    <id>http://yoursite.com/2021/11/25/Python%E4%B9%8Btxt%E6%96%87%E6%9C%AC%E8%AF%BB%E5%86%99%E4%B8%8E%E6%90%9C%E7%B4%A2/</id>
    <published>2021-11-25T11:51:04.000Z</published>
    <updated>2021-11-26T07:11:44.066Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要是记录在做第一次项目中所用到的re库和pandas库读txt、excel文件的操作代码记录，不仅为了记录学习足迹，也为了以后用方便copy。</p>        <h2 id="re库的操作">          <a href="#re库的操作" class="heading-link"><i class="fas fa-link"></i></a><a href="#re库的操作" class="headerlink" title="re库的操作"></a>re库的操作</h2>      <p>主要是re.sub()的使用</p>        <h3 id="re-sub：获取字符串固定位置上的数字">          <a href="#re-sub：获取字符串固定位置上的数字" class="heading-link"><i class="fas fa-link"></i></a><a href="#re-sub：获取字符串固定位置上的数字" class="headerlink" title="re.sub：获取字符串固定位置上的数字"></a>re.sub：获取字符串固定位置上的数字</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">text = <span class="string">'/Contour Image 6 Sequence  1 item'</span></span><br><span class="line">num = re.sub(<span class="string">r'\D'</span>, <span class="string">""</span>, text[-<span class="number">7</span>:])</span><br><span class="line"><span class="comment"># text[-7:]这种是固定区域搜素</span></span><br><span class="line"><span class="built_in">print</span>(num)</span><br><span class="line">输出：<span class="number">1</span></span><br></pre></td></tr></tbody></table></div></figure>        <h2 id="txt文本读写">          <a href="#txt文本读写" class="heading-link"><i class="fas fa-link"></i></a><a href="#txt文本读写" class="headerlink" title="txt文本读写"></a>txt文本读写</h2>              <h3 id="open：读取txt文件">          <a href="#open：读取txt文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#open：读取txt文件" class="headerlink" title="open：读取txt文件"></a>open：读取txt文件</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span> = <span class="string">'loss.txt'</span></span><br><span class="line">dir_r = <span class="built_in">open</span>(<span class="built_in">dir</span>, <span class="string">'r'</span>)</span><br><span class="line">content = dir_r.read()</span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line">dir_r.close()</span><br><span class="line">输出：以字符串的形式将txt的内容显示出来</span><br></pre></td></tr></tbody></table></div></figure><p>注意：使用open()最后要close(),而像下面这种使用with open() 本身就自带close(),所以不用写close().</p>        <h3 id="write：在txt文件写入内容">          <a href="#write：在txt文件写入内容" class="heading-link"><i class="fas fa-link"></i></a><a href="#write：在txt文件写入内容" class="headerlink" title="write：在txt文件写入内容"></a>write：在txt文件写入内容</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">loss = <span class="string">'i , 2 , 6 . 9'</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'loss.txt'</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="built_in">str</span>(loss))</span><br></pre></td></tr></tbody></table></div></figure><p>注意：写入的内容必须是字符串格式</p>        <h3 id="truncate：清空txt文件内容">          <a href="#truncate：清空txt文件内容" class="heading-link"><i class="fas fa-link"></i></a><a href="#truncate：清空txt文件内容" class="headerlink" title="truncate：清空txt文件内容"></a>truncate：清空txt文件内容</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">r'loss.txt'</span>, <span class="string">'a+'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> test:</span><br><span class="line">    test.truncate(<span class="number">0</span>)</span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="eval：将字符串转换为对应的列表、字典、元祖">          <a href="#eval：将字符串转换为对应的列表、字典、元祖" class="heading-link"><i class="fas fa-link"></i></a><a href="#eval：将字符串转换为对应的列表、字典、元祖" class="headerlink" title="eval：将字符串转换为对应的列表、字典、元祖"></a>eval：将字符串转换为对应的列表、字典、元祖</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">t = <span class="string">"{1:'a', 2:'b', 3:'d'}"</span></span><br><span class="line">b = <span class="built_in">eval</span>(t)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b),b)</span><br><span class="line">输出：&lt;<span class="class"><span class="keyword">class</span>,'<span class="title">str</span>'&gt;, {1:</span><span class="string">'a'</span>, <span class="number">2</span>:<span class="string">'b'</span>, <span class="number">3</span>:<span class="string">'d'</span>}</span><br></pre></td></tr></tbody></table></div></figure><p>注意：只适用于存储形式就是对应的列表、字典、元祖<br>其与str()函数作用正好相反</p>        <h2 id="pandas库的操作">          <a href="#pandas库的操作" class="heading-link"><i class="fas fa-link"></i></a><a href="#pandas库的操作" class="headerlink" title="pandas库的操作"></a>pandas库的操作</h2>              <h3 id="excel的读取">          <a href="#excel的读取" class="heading-link"><i class="fas fa-link"></i></a><a href="#excel的读取" class="headerlink" title="excel的读取"></a>excel的读取</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">root = <span class="string">r'/Users/frank/Desktop/1.xlsx'</span></span><br><span class="line">df = pd.read_excel(root)</span><br><span class="line">data = df.values</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">输出：会形成一个多维数组，data[i]表示第几行的全部数组</span><br></pre></td></tr></tbody></table></div></figure><p><img src="excel1.png" alt="excel"></p>        <h3 id="转换读取的数据">          <a href="#转换读取的数据" class="heading-link"><i class="fas fa-link"></i></a><a href="#转换读取的数据" class="headerlink" title="转换读取的数据"></a>转换读取的数据</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_excel(root)</span><br><span class="line">data = <span class="built_in">dict</span>(df.values)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line">输出：可以转换成一个字典，使其每行一一对应</span><br></pre></td></tr></tbody></table></div></figure><p><img src="excel2.png" alt="excel"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这篇文章主要是记录在做第一次项目中所用到的re库和pandas库读txt、excel文件的操作代码记录，不仅为了记录学习足迹，也为了以后用方便copy。&lt;/p&gt;

        &lt;h2 id=&quot;re库的操作&quot;&gt;
          &lt;a href=&quot;#re库的操作&quot; cl</summary>
      
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="re" scheme="http://yoursite.com/tags/re/"/>
    
    <category term="txt" scheme="http://yoursite.com/tags/txt/"/>
    
    <category term="pandas" scheme="http://yoursite.com/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>Python库之os</title>
    <link href="http://yoursite.com/2021/11/25/Python%E5%BA%93%E4%B9%8Bos/"/>
    <id>http://yoursite.com/2021/11/25/Python%E5%BA%93%E4%B9%8Bos/</id>
    <published>2021-11-25T05:40:13.000Z</published>
    <updated>2021-11-25T14:48:57.586Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章主要是记录在做第一次项目中所用到的os库代码的记录，不仅为了记录学习足迹，也为了以后用方便copy。</p>        <h2 id="os库函数基本应用">          <a href="#os库函数基本应用" class="heading-link"><i class="fas fa-link"></i></a><a href="#os库函数基本应用" class="headerlink" title="os库函数基本应用"></a>os库函数基本应用</h2>              <h3 id="join：合并两个地址">          <a href="#join：合并两个地址" class="heading-link"><i class="fas fa-link"></i></a><a href="#join：合并两个地址" class="headerlink" title="join：合并两个地址"></a>join：合并两个地址</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root_path = <span class="string">r'/Users/frank/Desktop'</span></span><br><span class="line">name = <span class="string">'image.jpg'</span></span><br><span class="line">path = os.path.join(root_path, name)</span><br><span class="line"><span class="built_in">print</span>(path)</span><br><span class="line">输出：/Users/frank/Desktop/image.jpg</span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="basename：分离地址下最后一个文件名">          <a href="#basename：分离地址下最后一个文件名" class="heading-link"><i class="fas fa-link"></i></a><a href="#basename：分离地址下最后一个文件名" class="headerlink" title="basename：分离地址下最后一个文件名"></a>basename：分离地址下最后一个文件名</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root_path = <span class="string">r'/Users/frank/Desktop/image.jpg'</span></span><br><span class="line">name = os.path.basename(root_path)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">输出：image.jpg</span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="isfile：查找文件是否存在">          <a href="#isfile：查找文件是否存在" class="heading-link"><i class="fas fa-link"></i></a><a href="#isfile：查找文件是否存在" class="headerlink" title="isfile：查找文件是否存在"></a>isfile：查找文件是否存在</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root_path = <span class="string">r'/Users/frank/Desktop/image.jpg'</span></span><br><span class="line"><span class="keyword">if</span> os.path.isfile(root_path):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'yes'</span>)</span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="splitext：分离文件的文件名和后缀">          <a href="#splitext：分离文件的文件名和后缀" class="heading-link"><i class="fas fa-link"></i></a><a href="#splitext：分离文件的文件名和后缀" class="headerlink" title="splitext：分离文件的文件名和后缀"></a>splitext：分离文件的文件名和后缀</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">'/Users/frank/Desktop/image.jpg'</span></span><br><span class="line">a = os.path.splitext(name)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">输出：<span class="string">'/Users/frank/Desktop/image'</span>,<span class="string">'.jpg'</span></span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="os-listdir：查找当前目录下的所有文件和文件夹（仅当前目录）">          <a href="#os-listdir：查找当前目录下的所有文件和文件夹（仅当前目录）" class="heading-link"><i class="fas fa-link"></i></a><a href="#os-listdir：查找当前目录下的所有文件和文件夹（仅当前目录）" class="headerlink" title="os.listdir：查找当前目录下的所有文件和文件夹（仅当前目录）"></a>os.listdir：查找当前目录下的所有文件和文件夹（仅当前目录）</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root = <span class="string">r'/Users/frank/Desktop/files'</span></span><br><span class="line">path_list = os.listdir(root)</span><br><span class="line"><span class="comment"># 对文件夹的内容进行排序</span></span><br><span class="line">path_list.sort()</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> path_list:</span><br><span class="line">    files_name = os.path.join(root, name)</span><br><span class="line">    <span class="built_in">print</span>(name)</span><br><span class="line">输出：image1.jpg,image2.jpg,image3.jpg......</span><br></pre></td></tr></tbody></table></div></figure>        <h3 id="os-walk：查找目录下所有的文件或文件夹（包括文件夹里还存放的文件）">          <a href="#os-walk：查找目录下所有的文件或文件夹（包括文件夹里还存放的文件）" class="heading-link"><i class="fas fa-link"></i></a><a href="#os-walk：查找目录下所有的文件或文件夹（包括文件夹里还存放的文件）" class="headerlink" title="os.walk：查找目录下所有的文件或文件夹（包括文件夹里还存放的文件）"></a>os.walk：查找目录下所有的文件或文件夹（包括文件夹里还存放的文件）</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root = <span class="string">r'/Users/frank/Desktop/files'</span></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(root):</span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line">        files_name = os.path.join(root, name)</span><br><span class="line">        <span class="built_in">print</span>(files_name)</span><br><span class="line">输出：/Users/frank/Desktop/files/img.jpg</span><br><span class="line">     /Users/frank/Desktop/files/image/m.jpg</span><br><span class="line">     /Users/frank/Desktop/files/image/zz.jpg</span><br><span class="line">     /Users/frank/Desktop/files/image/lab/xx.csv</span><br></pre></td></tr></tbody></table></div></figure><p>这个代码是读取根目录下的所有目录文件和文件夹，不仅仅是当前目录下的文件。</p>        <h3 id="通过关键词查找文件">          <a href="#通过关键词查找文件" class="heading-link"><i class="fas fa-link"></i></a><a href="#通过关键词查找文件" class="headerlink" title="通过关键词查找文件"></a>通过关键词查找文件</h3>      <figure class="highlight python"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root_path = <span class="string">r'/Users/frank/Desktop/files/image'</span></span><br><span class="line">keyword = <span class="string">'imag'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findfile</span>(<span class="params">keyword, root_path</span>):</span></span><br><span class="line"><span class="comment"># keyword为关键字，root为文件夹路径</span></span><br><span class="line">    filelist = []  <span class="comment"># 存放每个文件</span></span><br><span class="line">    rfilelist = []  <span class="comment"># 存放匹配文件</span></span><br><span class="line">    <span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(root):</span><br><span class="line">        <span class="keyword">for</span> name <span class="keyword">in</span> files:</span><br><span class="line">            filelist.append(os.path.join(root, name))</span><br><span class="line">    <span class="comment"># 遍历路径文件下的所有文件夹，将所有文件放入filelist</span></span><br><span class="line">    <span class="comment"># i为文件的绝对地址</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> filelist:</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(i):</span><br><span class="line">        <span class="comment"># basename函数将地址最后文件名分离出来</span></span><br><span class="line">            <span class="keyword">if</span> keyword <span class="keyword">in</span> os.path.basename(i):</span><br><span class="line">                rfilelist.append(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> rfilelist</span><br><span class="line">输出：在image文件夹内查找存在“imag”的文件地址</span><br></pre></td></tr></tbody></table></div></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这篇文章主要是记录在做第一次项目中所用到的os库代码的记录，不仅为了记录学习足迹，也为了以后用方便copy。&lt;/p&gt;

        &lt;h2 id=&quot;os库函数基本应用&quot;&gt;
          &lt;a href=&quot;#os库函数基本应用&quot; class=&quot;heading-lin</summary>
      
    
    
    
    
    <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
    <category term="os" scheme="http://yoursite.com/tags/os/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2021/11/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2021/11/22/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-11-22T06:32:49.000Z</published>
    <updated>2021-11-22T06:34:39.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介">          <a href="#简介" class="heading-link"><i class="fas fa-link"></i></a><a href="#简介" class="headerlink" title="简介"></a>简介</h1>      <p>这是我的第一篇‘Hexo’</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;
          &lt;a href=&quot;#简介&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2021/11/18/hello-world/"/>
    <id>http://yoursite.com/2021/11/18/hello-world/</id>
    <published>2021-11-18T05:43:16.463Z</published>
    <updated>2021-11-23T06:22:05.476Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl"><a class="exturl__link" href="https://hexo.io/">Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/">documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link" href="https://github.com/hexojs/hexo/issues">GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>        <h2 id="Quick-Start">          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>              <h3 id="Create-a-new-post">          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>      <figure class="highlight bash"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/writing.html">Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Run-server">          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>      <figure class="highlight bash"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/server.html">Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Generate-static-files">          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>      <figure class="highlight bash"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/generating.html">Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h3 id="Deploy-to-remote-sites">          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>      <figure class="highlight bash"><div class="table-container"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></div></figure><p>More info: <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/one-command-deployment.html">Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-exter</summary>
      
    
    
    
    
  </entry>
  
</feed>
